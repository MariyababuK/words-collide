{"ast":null,"code":"var _jsxFileName = \"D:\\\\words-collide\\\\frontend\\\\src\\\\components\\\\GameScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameScreen({\n  gameState,\n  socketId,\n  onSubmitWord\n}) {\n  _s();\n  const [currentWord, setCurrentWord] = useState('');\n  const me = gameState.players.find(p => p.id === socketId);\n  const opponent = gameState.players.find(p => p.id !== socketId);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentWord.trim()) {\n      onSubmitWord(currentWord);\n      setCurrentWord('');\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Round \", gameState.round]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: formatTime(gameState.timer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Rounds Won: \", (me === null || me === void 0 ? void 0 : me.roundsWon) || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letters-grid\",\n      children: gameState.letters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter-tile\",\n        children: letter\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"word-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentWord,\n        onChange: e => setCurrentWord(e.target.value),\n        placeholder: \"Type your word here...\",\n        className: \"input-field\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-card card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [(me === null || me === void 0 ? void 0 : me.name) || 'You', \" (Score: \", (me === null || me === void 0 ? void 0 : me.totalScore) || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"word-list\",\n          children: me === null || me === void 0 ? void 0 : me.submittedWords.map((word, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: word\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 62\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), opponent && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-card card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [opponent.name, \" (Score: \", opponent.totalScore, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"word-list\",\n          children: Array(opponent.submittedWords.length).fill().map((_, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"***\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 89\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(GameScreen, \"lMJd5CNJkiBuPItI203/qeIb/Ys=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GameScreen","gameState","socketId","onSubmitWord","_s","currentWord","setCurrentWord","me","players","find","p","id","opponent","handleSubmit","e","preventDefault","trim","formatTime","seconds","minutes","Math","floor","remainingSeconds","className","children","round","fileName","_jsxFileName","lineNumber","columnNumber","timer","roundsWon","letters","map","letter","index","onSubmit","type","value","onChange","target","placeholder","autoFocus","name","totalScore","submittedWords","word","i","Array","length","fill","_","_c","$RefreshReg$"],"sources":["D:/words-collide/frontend/src/components/GameScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction GameScreen({ gameState, socketId, onSubmitWord }) {\r\n    const [currentWord, setCurrentWord] = useState('');\r\n\r\n    const me = gameState.players.find(p => p.id === socketId);\r\n    const opponent = gameState.players.find(p => p.id !== socketId);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (currentWord.trim()) {\r\n            onSubmitWord(currentWord);\r\n            setCurrentWord('');\r\n        }\r\n    };\r\n    \r\n    const formatTime = (seconds) => {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainingSeconds = seconds % 60;\r\n        return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"game-screen\">\r\n            <div className=\"game-header\">\r\n                <h3>Round {gameState.round}</h3>\r\n                <div className=\"timer\">{formatTime(gameState.timer)}</div>\r\n                <div>Rounds Won: {me?.roundsWon || 0}</div>\r\n            </div>\r\n\r\n            <div className=\"letters-grid\">\r\n                {gameState.letters.map((letter, index) => (\r\n                    <div key={index} className=\"letter-tile\">{letter}</div>\r\n                ))}\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"word-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={currentWord}\r\n                    onChange={(e) => setCurrentWord(e.target.value)}\r\n                    placeholder=\"Type your word here...\"\r\n                    className=\"input-field\"\r\n                    autoFocus\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-submit\">Submit</button>\r\n            </form>\r\n\r\n            <div className=\"player-info-container\">\r\n                <div className=\"player-card card\">\r\n                    <h4>{me?.name || 'You'} (Score: {me?.totalScore || 0})</h4>\r\n                    <ul className=\"word-list\">\r\n                        {me?.submittedWords.map((word, i) => <li key={i}>{word}</li>)}\r\n                    </ul>\r\n                </div>\r\n                {opponent && (\r\n                    <div className=\"player-card card\">\r\n                        <h4>{opponent.name} (Score: {opponent.totalScore})</h4>\r\n                         <ul className=\"word-list\">\r\n                            {/* Shows opponent's word count, not the words themselves */}\r\n                            {Array(opponent.submittedWords.length).fill().map((_, i) => <li key={i}>***</li>)}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\words-collide\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport GameScreen from './components/GameScreen';\nimport RoundEndScreen from './components/RoundEndScreen';\nimport GameOverScreen from './components/GameOverScreen';\nimport './styles/App.css';\n\n// Initialize socket connection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(process.env.REACT_APP_BACKEND_URL);\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [notification, setNotification] = useState({\n    message: '',\n    type: ''\n  });\n  const showNotification = (message, type = 'error') => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification({\n      message: '',\n      type: ''\n    }), 3000);\n  };\n  useEffect(() => {\n    socket.on('gameCreated', game => setGameState(game));\n    socket.on('gameUpdate', game => setGameState(game));\n    socket.on('timerTick', time => {\n      setGameState(prev => ({\n        ...prev,\n        timer: time\n      }));\n    });\n    socket.on('error', message => showNotification(message, 'error'));\n    socket.on('invalidWord', message => showNotification(message, 'error'));\n    socket.on('wordValidated', word => showNotification(`'${word.toUpperCase()}' accepted!`, 'success'));\n    socket.on('playerLeft', message => {\n      showNotification(message, 'error');\n      setGameState(null); // Reset to welcome screen\n    });\n    return () => {\n      socket.off('gameCreated');\n      socket.off('gameUpdate');\n      socket.off('timerTick');\n      socket.off('error');\n      socket.off('invalidWord');\n      socket.off('wordValidated');\n      socket.off('playerLeft');\n    };\n  }, []);\n  const handleCreateGame = useCallback(() => {\n    if (playerName.trim()) {\n      socket.emit('createGame', playerName);\n    } else {\n      showNotification('Please enter your name.');\n    }\n  }, [playerName]);\n  const handleJoinGame = useCallback(gameCode => {\n    if (playerName.trim() && gameCode.trim()) {\n      socket.emit('joinGame', {\n        gameCode: gameCode.toUpperCase(),\n        playerName\n      });\n    } else {\n      showNotification('Please enter your name and a game code.');\n    }\n  }, [playerName]);\n  const handleSubmitWord = useCallback(word => {\n    if (gameState) {\n      socket.emit('submitWord', {\n        gameCode: gameState.gameCode,\n        word\n      });\n    }\n  }, [gameState]);\n  const handlePlayerReady = useCallback(() => {\n    if (gameState) {\n      socket.emit('playerReady', gameState.gameCode);\n    }\n  }, [gameState]);\n  const handlePlayAgain = useCallback(() => {\n    if (gameState) {\n      socket.emit('playAgain', gameState.gameCode);\n    }\n  }, [gameState]);\n  const renderContent = () => {\n    if (!gameState) {\n      return /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n        playerName: playerName,\n        setPlayerName: setPlayerName,\n        onCreateGame: handleCreateGame,\n        onJoinGame: handleJoinGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this);\n    }\n    switch (gameState.status) {\n      case 'playing':\n        return /*#__PURE__*/_jsxDEV(GameScreen, {\n          gameState: gameState,\n          socketId: socket.id,\n          onSubmitWord: handleSubmitWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 24\n        }, this);\n      case 'round-end':\n        return /*#__PURE__*/_jsxDEV(RoundEndScreen, {\n          gameState: gameState,\n          socketId: socket.id,\n          onPlayerReady: handlePlayerReady\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this);\n      case 'game-over':\n        return /*#__PURE__*/_jsxDEV(GameOverScreen, {\n          gameState: gameState,\n          onPlayAgain: handlePlayAgain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n          playerName: playerName,\n          setPlayerName: setPlayerName,\n          onCreateGame: handleCreateGame,\n          onJoinGame: handleJoinGame,\n          waitingMessage: `Waiting for another player... Code: ${gameState.gameCode}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Words Collide \\uD83D\\uDCA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), notification.message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"9CtbZR9MBhVcMTPO9FSOHkqLRT8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","io","WelcomeScreen","GameScreen","RoundEndScreen","GameOverScreen","jsxDEV","_jsxDEV","socket","process","env","REACT_APP_BACKEND_URL","App","_s","gameState","setGameState","playerName","setPlayerName","notification","setNotification","message","type","showNotification","setTimeout","on","game","time","prev","timer","word","toUpperCase","off","handleCreateGame","trim","emit","handleJoinGame","gameCode","handleSubmitWord","handlePlayerReady","handlePlayAgain","renderContent","onCreateGame","onJoinGame","fileName","_jsxFileName","lineNumber","columnNumber","status","socketId","id","onSubmitWord","onPlayerReady","onPlayAgain","waitingMessage","className","children","_c","$RefreshReg$"],"sources":["D:/words-collide/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport io from 'socket.io-client';\r\nimport WelcomeScreen from './components/WelcomeScreen';\r\nimport GameScreen from './components/GameScreen';\r\nimport RoundEndScreen from './components/RoundEndScreen';\r\nimport GameOverScreen from './components/GameOverScreen';\r\nimport './styles/App.css';\r\n\r\n// Initialize socket connection\r\nconst socket = io(process.env.REACT_APP_BACKEND_URL);\r\n\r\nfunction App() {\r\n    const [gameState, setGameState] = useState(null);\r\n    const [playerName, setPlayerName] = useState('');\r\n    const [notification, setNotification] = useState({ message: '', type: '' });\r\n\r\n    const showNotification = (message, type = 'error') => {\r\n        setNotification({ message, type });\r\n        setTimeout(() => setNotification({ message: '', type: '' }), 3000);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on('gameCreated', (game) => setGameState(game));\r\n        socket.on('gameUpdate', (game) => setGameState(game));\r\n        socket.on('timerTick', (time) => {\r\n            setGameState(prev => ({ ...prev, timer: time }));\r\n        });\r\n        socket.on('error', (message) => showNotification(message, 'error'));\r\n        socket.on('invalidWord', (message) => showNotification(message, 'error'));\r\n        socket.on('wordValidated', (word) => showNotification(`'${word.toUpperCase()}' accepted!`, 'success'));\r\n        socket.on('playerLeft', (message) => {\r\n            showNotification(message, 'error');\r\n            setGameState(null); // Reset to welcome screen\r\n        });\r\n\r\n        return () => {\r\n            socket.off('gameCreated');\r\n            socket.off('gameUpdate');\r\n            socket.off('timerTick');\r\n            socket.off('error');\r\n            socket.off('invalidWord');\r\n            socket.off('wordValidated');\r\n            socket.off('playerLeft');\r\n        };\r\n    }, []);\r\n\r\n    const handleCreateGame = useCallback(() => {\r\n        if (playerName.trim()) {\r\n            socket.emit('createGame', playerName);\r\n        } else {\r\n            showNotification('Please enter your name.');\r\n        }\r\n    }, [playerName]);\r\n\r\n    const handleJoinGame = useCallback((gameCode) => {\r\n        if (playerName.trim() && gameCode.trim()) {\r\n            socket.emit('joinGame', { gameCode: gameCode.toUpperCase(), playerName });\r\n        } else {\r\n            showNotification('Please enter your name and a game code.');\r\n        }\r\n    }, [playerName]);\r\n\r\n    const handleSubmitWord = useCallback((word) => {\r\n        if (gameState) {\r\n            socket.emit('submitWord', { gameCode: gameState.gameCode, word });\r\n        }\r\n    }, [gameState]);\r\n\r\n    const handlePlayerReady = useCallback(() => {\r\n        if (gameState) {\r\n            socket.emit('playerReady', gameState.gameCode);\r\n        }\r\n    }, [gameState]);\r\n\r\n    const handlePlayAgain = useCallback(() => {\r\n        if (gameState) {\r\n            socket.emit('playAgain', gameState.gameCode);\r\n        }\r\n    }, [gameState]);\r\n\r\n    const renderContent = () => {\r\n        if (!gameState) {\r\n            return (\r\n                <WelcomeScreen\r\n                    playerName={playerName}\r\n                    setPlayerName={setPlayerName}\r\n                    onCreateGame={handleCreateGame}\r\n                    onJoinGame={handleJoinGame}\r\n                />\r\n            );\r\n        }\r\n\r\n        switch (gameState.status) {\r\n            case 'playing':\r\n                return <GameScreen gameState={gameState} socketId={socket.id} onSubmitWord={handleSubmitWord} />;\r\n            case 'round-end':\r\n                return <RoundEndScreen gameState={gameState} socketId={socket.id} onPlayerReady={handlePlayerReady} />;\r\n            case 'game-over':\r\n                return <GameOverScreen gameState={gameState} onPlayAgain={handlePlayAgain} />;\r\n            default:\r\n                return <WelcomeScreen\r\n                            playerName={playerName}\r\n                            setPlayerName={setPlayerName}\r\n                            onCreateGame={handleCreateGame}\r\n                            onJoinGame={handleJoinGame}\r\n                            waitingMessage={`Waiting for another player... Code: ${gameState.gameCode}`}\r\n                       />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <header>\r\n                <h1>Words Collide 💥</h1>\r\n            </header>\r\n            <main>\r\n                {renderContent()}\r\n            </main>\r\n            {notification.message && (\r\n                <div className={`notification ${notification.type}`}>\r\n                    {notification.message}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
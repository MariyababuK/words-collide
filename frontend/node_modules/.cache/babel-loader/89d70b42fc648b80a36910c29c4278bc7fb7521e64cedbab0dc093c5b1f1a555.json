{"ast":null,"code":"var _jsxFileName = \"D:\\\\words-collide\\\\frontend\\\\src\\\\components\\\\GameOverScreen.jsx\";\n// frontend/src/components/GameOverScreen.jsx\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameOverScreen({\n  gameState,\n  socketId,\n  onPlayAgain\n}) {\n  const me = gameState.players.find(p => p.id === socketId);\n  const opponent = gameState.players.find(p => p.id !== socketId);\n  const renderPlayAgainButton = () => {\n    if (!me) return null;\n    if (me.wantsToPlayAgain) {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Waiting for \", (opponent === null || opponent === void 0 ? void 0 : opponent.name) || 'opponent', \" to play again...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onPlayAgain,\n      className: \"btn btn-primary\",\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-over-screen card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\uD83C\\uDF89 Winner: \", gameState.gameWinner, \" \\uD83C\\uDF89\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final-scores\",\n      children: gameState.players.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [p.name, \" \", p.id === socketId ? '(You)' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Final Score: \", p.totalScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rounds Won: \", p.roundsWon]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), renderPlayAgainButton()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = GameOverScreen;\nexport default GameOverScreen;\nvar _c;\n$RefreshReg$(_c, \"GameOverScreen\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GameOverScreen","gameState","socketId","onPlayAgain","me","players","find","p","id","opponent","renderPlayAgainButton","wantsToPlayAgain","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","gameWinner","map","totalScore","roundsWon","_c","$RefreshReg$"],"sources":["D:/words-collide/frontend/src/components/GameOverScreen.jsx"],"sourcesContent":["// frontend/src/components/GameOverScreen.jsx\r\n\r\nimport React from 'react';\r\n\r\nfunction GameOverScreen({ gameState, socketId, onPlayAgain }) {\r\n    const me = gameState.players.find(p => p.id === socketId);\r\n    const opponent = gameState.players.find(p => p.id !== socketId);\r\n\r\n    const renderPlayAgainButton = () => {\r\n        if (!me) return null;\r\n\r\n        if (me.wantsToPlayAgain) {\r\n            return <h4>Waiting for {opponent?.name || 'opponent'} to play again...</h4>;\r\n        }\r\n\r\n        return (\r\n            <button onClick={onPlayAgain} className=\"btn btn-primary\">\r\n                Play Again\r\n            </button>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"game-over-screen card\">\r\n            <h2>Game Over!</h2>\r\n            <h1>ðŸŽ‰ Winner: {gameState.gameWinner} ðŸŽ‰</h1>\r\n            \r\n            <div className=\"final-scores\">\r\n                {gameState.players.map(p => (\r\n                    <div key={p.id}>\r\n                        <h4>{p.name} {p.id === socketId ? '(You)' : ''}</h4>\r\n                        <p>Final Score: {p.totalScore}</p>\r\n                        <p>Rounds Won: {p.roundsWon}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {renderPlayAgainButton()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameOverScreen;"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAC;EAAEC,SAAS;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAC1D,MAAMC,EAAE,GAAGH,SAAS,CAACI,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,QAAQ,CAAC;EACzD,MAAMO,QAAQ,GAAGR,SAAS,CAACI,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,QAAQ,CAAC;EAE/D,MAAMQ,qBAAqB,GAAGA,CAAA,KAAM;IAChC,IAAI,CAACN,EAAE,EAAE,OAAO,IAAI;IAEpB,IAAIA,EAAE,CAACO,gBAAgB,EAAE;MACrB,oBAAOZ,OAAA;QAAAa,QAAA,GAAI,cAAY,EAAC,CAAAH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,IAAI,KAAI,UAAU,EAAC,mBAAiB;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAC/E;IAEA,oBACIlB,OAAA;MAAQmB,OAAO,EAAEf,WAAY;MAACgB,SAAS,EAAC,iBAAiB;MAAAP,QAAA,EAAC;IAE1D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAEjB,CAAC;EAED,oBACIlB,OAAA;IAAKoB,SAAS,EAAC,uBAAuB;IAAAP,QAAA,gBAClCb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA;MAAAa,QAAA,GAAI,uBAAW,EAACX,SAAS,CAACmB,UAAU,EAAC,eAAG;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7ClB,OAAA;MAAKoB,SAAS,EAAC,cAAc;MAAAP,QAAA,EACxBX,SAAS,CAACI,OAAO,CAACgB,GAAG,CAACd,CAAC,iBACpBR,OAAA;QAAAa,QAAA,gBACIb,OAAA;UAAAa,QAAA,GAAKL,CAAC,CAACM,IAAI,EAAC,GAAC,EAACN,CAAC,CAACC,EAAE,KAAKN,QAAQ,GAAG,OAAO,GAAG,EAAE;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpDlB,OAAA;UAAAa,QAAA,GAAG,eAAa,EAACL,CAAC,CAACe,UAAU;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClClB,OAAA;UAAAa,QAAA,GAAG,cAAY,EAACL,CAAC,CAACgB,SAAS;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH1BV,CAAC,CAACC,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIT,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAELP,qBAAqB,CAAC,CAAC;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEd;AAACO,EAAA,GApCQxB,cAAc;AAsCvB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}